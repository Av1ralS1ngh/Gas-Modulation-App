import React, { useState, useEffect } from "react";
import { ethers } from "ethers";

const contractAddress = "YOUR_DYNAMIC_THRESHOLD_CONTRACT_ADDRESS";
const abi = [
  // ABI details for DynamicThreshold contract
  {"abi":[{"type":"function","name":"adjustThreshold","inputs":[{"name":"percentageBelowThreshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getThreshold","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"threshold","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"ThresholdUpdated","inputs":[{"name":"newThreshold","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x6080604052670de0b6b3a7640000600055348015601b57600080fd5b506101ac8061002b6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806342cde4e814610046578063874adebd14610061578063e75235b814610076575b600080fd5b61004f60005481565b60405190815260200160405180910390f35b61007461006f366004610110565b61007e565b005b60005461004f565b60328111156100aa576064600054605f6100989190610129565b6100a29190610154565b6000556100d2565b60328110156100d257606460005460696100c49190610129565b6100ce9190610154565b6000555b7fadfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe17160005460405161010591815260200190565b60405180910390a150565b60006020828403121561012257600080fd5b5035919050565b808202811582820484141761014e57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261017157634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206ebbb8b668a7b125a0f447286c1817546ca0b04c759be6dd53874190cec9671364736f6c634300081c0033","sourceMap":"57:704:21:-:0;;;116:7;89:34;;57:704;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c806342cde4e814610046578063874adebd14610061578063e75235b814610076575b600080fd5b61004f60005481565b60405190815260200160405180910390f35b61007461006f366004610110565b61007e565b005b60005461004f565b60328111156100aa576064600054605f6100989190610129565b6100a29190610154565b6000556100d2565b60328110156100d257606460005460696100c49190610129565b6100ce9190610154565b6000555b7fadfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe17160005460405161010591815260200190565b60405180910390a150565b60006020828403121561012257600080fd5b5035919050565b808202811582820484141761014e57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261017157634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206ebbb8b668a7b125a0f447286c1817546ca0b04c759be6dd53874190cec9671364736f6c634300081c0033","sourceMap":"57:704:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;89:34;;;;;;;;;160:25:24;;;148:2;133:18;89:34:21;;;;;;;206:460;;;;;;:::i;:::-;;:::i;:::-;;672:87;717:7;743:9;672:87;;206:460;315:2;288:24;:29;284:271;;;402:3;385:9;;397:2;385:14;;;;:::i;:::-;:20;;;;:::i;:::-;373:9;:32;284:271;;;453:2;426:24;:29;422:133;;;541:3;523:9;;535:3;523:15;;;;:::i;:::-;:21;;;;:::i;:::-;511:9;:33;422:133;632:27;649:9;;632:27;;;;160:25:24;;148:2;133:18;;14:177;632:27:21;;;;;;;;206:460;:::o;196:180:24:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:24;;196:180;-1:-1:-1;196:180:24:o;381:265::-;454:9;;;485;;502:15;;;496:22;;482:37;472:168;;562:10;557:3;553:20;550:1;543:31;597:4;594:1;587:15;625:4;622:1;615:15;472:168;381:265;;;;:::o;651:217::-;691:1;717;707:132;;761:10;756:3;752:20;749:1;742:31;796:4;793:1;786:15;824:4;821:1;814:15;707:132;-1:-1:-1;853:9:24;;651:217::o","linkReferences":{}},"methodIdentifiers":{"adjustThreshold(uint256)":"874adebd","getThreshold()":"e75235b8","threshold()":"42cde4e8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"ThresholdUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentageBelowThreshold\",\"type\":\"uint256\"}],\"name\":\"adjustThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DynamicThreshold.sol\":\"DynamicThreshold\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/DynamicThreshold.sol\":{\"keccak256\":\"0xa237d7ea0cb4c5da3eaed2e3105d3b3f6cbb65b9a86f74c4c4463ac9cc3474f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fb28894cab01ff9e2d702ee5b37fbacca3faf38d5fa2fe82a61bbbad37f34d5\",\"dweb:/ipfs/QmVyqbEei95aBuwr9K11QEgeKuBHCKgGsCd3i2t6BjWMjs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"newThreshold","type":"uint256","indexed":false}],"type":"event","name":"ThresholdUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"percentageBelowThreshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"adjustThreshold"},{"inputs":[],"stateMutability":"view","type":"function","name":"getThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"threshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/DynamicThreshold.sol":"DynamicThreshold"},"evmVersion":"paris","libraries":{}},"sources":{"src/DynamicThreshold.sol":{"keccak256":"0xa237d7ea0cb4c5da3eaed2e3105d3b3f6cbb65b9a86f74c4c4463ac9cc3474f4","urls":["bzz-raw://1fb28894cab01ff9e2d702ee5b37fbacca3faf38d5fa2fe82a61bbbad37f34d5","dweb:/ipfs/QmVyqbEei95aBuwr9K11QEgeKuBHCKgGsCd3i2t6BjWMjs"],"license":"MIT"}},"version":1},"id":21}
];

const ThresholdDisplay = () => {
  const [threshold, setThreshold] = useState(null);

  useEffect(() => {
    const fetchThreshold = async () => {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const contract = new ethers.Contract(contractAddress, abi, provider);
      const currentThreshold = await contract.getThreshold();
      setThreshold(ethers.utils.formatEther(currentThreshold));
    };

    fetchThreshold();
  }, []);

  return <div>Current Gas-Free Threshold: {threshold} ETH</div>;
};

export default ThresholdDisplay;